{"version":3,"sources":["logo.svg","User_Github.js","App.js","reportWebVitals.js","index.js"],"names":["pic","height","user_git","UserGithub","props","state","username","githubtUrl","avatarUrl","login","id","followernum","followernumurl","followingnum","followingnumurl","public_repos","created_at","updated_at","$","get","this","source","result","console","log","data","setState","name","html_url","avatar_url","followers","followers_url","following","following_url","style","src","Button","variant","color","href","React","Component","ReactDOM","render","document","getElementById","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"uMAAe,I,kECwETA,EAAI,CAACC,OAAO,SACHC,EAjEA,WAAK,IACVC,EADS,kDAEX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACbC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,MAAO,GACPC,GAAI,GACJC,YAAa,GACbC,eAAgB,GAChBC,aAAc,GACdC,gBAAiB,GACjBC,aAAc,GACdC,WAAY,GACZC,WAAY,IAdE,EAFP,qDAmBX,WAAqB,IAAD,OACpBC,IAAEC,IAAIC,KAAKhB,MAAMiB,QAAQ,SAACC,GAClBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACA,EAAKC,SAAS,CACVpB,SAAUmB,EAAKE,KACfpB,WAAYkB,EAAKG,SACjBpB,UAAWiB,EAAKI,WAChBpB,MAAOgB,EAAKhB,MACZC,GAAIe,EAAKf,GACTC,YAAac,EAAKK,UAClBlB,eAAgBa,EAAKM,cACrBlB,aAAcY,EAAKO,UACnBlB,gBAAiBW,EAAKQ,cACtBlB,aAAcU,EAAKV,aACnBC,WAAYS,EAAKT,WACjBC,WAAYQ,EAAKR,kBApCtB,oBAyCX,WACI,OACA,gCACI,6BAAKG,KAAKf,MAAMC,WAChB,qBAAK4B,MAAOlC,EAAKmC,IAAKf,KAAKf,MAAMG,YACjC,uBACA,cAAC4B,EAAA,EAAD,CAAQC,QAAU,WAAWC,MAAO,UAAUC,KAAMnB,KAAKf,MAAME,WAA/D,yBAJJ,IAKI,+BAAKa,KAAKf,MAAMI,MAAhB,OACA,sCAASW,KAAKf,MAAMK,MACpB,+BAAKU,KAAKf,MAAMM,YAAhB,cAAwCS,KAAKf,MAAMQ,aAAnD,iBACA,gDAAmBO,KAAKf,MAAMU,gBAC9B,8CAAiBK,KAAKf,MAAMW,cAC5B,8CAAiBI,KAAKf,MAAMY,qBArDzB,GACUuB,IAAMC,WA0D/BC,IAASC,OACL,cAACxC,EAAD,CAAYkB,OAAO,wCACnBuB,SAASC,eAAe,UCnDjBC,MAXf,WACE,OACE,qBAAKC,UAAU,MAAf,SACG,8BACG7C,SCCK8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdP,IAASC,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFb,SAASC,eAAe,SAO1BG,M","file":"static/js/main.414897fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport $ from 'jquery';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\n\r\nconst user_git=()=>{\r\n    class UserGithub extends React.Component {\r\n        constructor(props){ \r\n            super(props);\r\n            this.state = {\r\n            username: '',\r\n            githubtUrl: '',\r\n            avatarUrl: '',\r\n            login: '',\r\n            id: '',\r\n            followernum: '',\r\n            followernumurl: '',\r\n            followingnum: '',\r\n            followingnumurl: '',\r\n            public_repos: '',\r\n            created_at: '',\r\n            updated_at: '',\r\n            }\r\n        }\r\n        componentDidMount() {\r\n        $.get(this.props.source, (result) => {\r\n                console.log(result);\r\n                const data = result;\r\n                if (data) {\r\n                    this.setState({\r\n                        username: data.name,\r\n                        githubtUrl: data.html_url,\r\n                        avatarUrl: data.avatar_url,\r\n                        login: data.login,\r\n                        id: data.id,\r\n                        followernum: data.followers,\r\n                        followernumurl: data.followers_url,\r\n                        followingnum: data.following,\r\n                        followingnumurl: data.following_url,\r\n                        public_repos: data.public_repos,\r\n                        created_at: data.created_at,\r\n                        updated_at: data.updated_at\r\n                });\r\n            }\r\n        });\r\n        }\r\n        render() {\r\n            return (\r\n            <div>\r\n                <h3>{this.state.username}</h3>\r\n                <img style={pic} src={this.state.avatarUrl}></img>\r\n                <br></br>\r\n                <Button variant = \"outlined\" color =\"primary\" href={this.state.githubtUrl}>Github Link</Button>.\r\n                <h2>{this.state.login} </h2>\r\n                <h3>ID: {this.state.id}</h3>\r\n                <h4>{this.state.followernum} Followers {this.state.followingnum} Following </h4>\r\n                <h3>public_repos: {this.state.public_repos}</h3>\r\n                <h3>created_at: {this.state.created_at}</h3>\r\n                <h3>updated_at: {this.state.updated_at}</h3>\r\n            \r\n            </div>\r\n            );\r\n        }\r\n    }\r\n    ReactDOM.render(\r\n        <UserGithub source=\"https://api.github.com/users/LHL670\" />,\r\n        document.getElementById('root')\r\n    );\r\n}\r\nconst pic={height:'250px' }\r\nexport default user_git;\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport user_git from './User_Github';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <div >\n         {user_git()}\n        </div>\n    </div>  \n      );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}